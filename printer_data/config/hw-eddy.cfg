[mcu eddy]
serial: /dev/serial/by-id/usb-Klipper_rp2040_50445061109E701C-if00
restart_method: command

[temperature_sensor btt_eddy_mcu]
sensor_type: temperature_mcu
sensor_mcu: eddy
min_temp: 10
max_temp: 100

[probe_eddy_ng btt_eddy]
sensor_type: ldc1612
i2c_mcu: eddy
i2c_bus: i2c0f
x_offset: -18.0
y_offset: 6.0 
samples_per_second: 500
#reg_drive_current: 16
#tap_drive_current: 17
# a bit lower than default, due to calibration
tap_start_z: 2.9
# I think correct for my probe
tap_target_z: -0.250
tap_mode: butter
tap_adjust_z: 0.035 # was 0.075
tap_threshold: 250
tap_butter_order: 2
tap_butter_lowcut: 5
tap_butter_highcut: 25
tap_samples: 3
tap_max_samples: 10
tap_samples_stddev: 0.010

[bed_mesh]
horizontal_move_z: 2 # set this to the same value as home_trigger_height (i.e. 2)
speed: 200
# mesh min x,y = bed_min_x + max(15, min(x_offs, 0)) , bed_min_y + max(15, min(y_offs, 0))
# mesh max x,y = bed_max_x - max(15, abs(x_offs)) , bed_max_y - max(15, abs(y_offs)) - fudge for scan overshoot
##mesh_min: 15, 15
##mesh_max: 334, 333
mesh_min: 20, 20
mesh_max: 330, 330
# extra x-axis movement to smooth out moves
#scan_overshoot: 5
probe_count: 20, 20 # 30, 30 # 15, 15  # too dense a mesh is bad with rapid scan due to noise from the probe. # noise is fixed, I think
algorithm: bicubic
bicubic_tension: 0.5
split_delta_z: 0.0125
# interpolate 3 points per probed point
mesh_pps: 2,2 # 3,3
adaptive_margin: 5
# layers to start fading out Z adjustment and to end it, with a target of 0
fade_start: 1
fade_end: 10
fade_target: 0

[temperature_sensor btt_eddy]
sensor_type: Generic 3950
sensor_pin: eddy:gpio26

# I have a homing_override
#[safe_z_home]
#home_xy_position: 175, 175
#z_hop: 5
#z_hop_speed: 25
#speed: 200

